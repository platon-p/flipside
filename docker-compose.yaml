services:
  db:
    restart: unless-stopped
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    env_file: './.env'
    volumes:
      - db-data:/var/lib/postgresql/data
  liquibase:
    image: liquibase/liquibase:alpine
    depends_on: [ db ]
    env_file: './.env'
    volumes:
      - ./database:/liquibase/changelog
    environment:
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - LIQUIBASE_COMMAND_USERNAME=${POSTGRES_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${POSTGRES_PASSWORD}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=changelog.xml
      - LIQUIBASE_COMMAND_DRIVER=org.postgresql.Driver
    entrypoint: [ "liquibase", "update" ]
  cardservice:
    build:
      context: ./cardservice
      dockerfile: Dockerfile
    env_file: './.env'
    environment:
      - PORT=80
      - DATASOURCE=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - db
  authservice:
    build:
      context: ./authservice
      dockerfile: Dockerfile
    env_file: './.env'
    stdin_open: true
    tty: true
    environment:
      - PORT=80
      - DATASOURCE=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - db
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - cardservice
      - authservice
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
volumes:
  db-data:
